#!/usr/bin/env python2



# Importing Modules
import pygtk
import gtk
import os

# This is the welcom screen for OBRevenge
# written by Jody James

class Base:

    def destroy(self, widget, data=None):
        gtk.main_quit()

    def update(self, widget):
        os.system("pamac-updater")

    def install(self, widget):
        os.system("gksu obsoftwareinstall.py")
    
    def read(self, widget):
        os.system("leafpad ~/Documentation")


    def __init__(self):
        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        self.window.set_position(gtk.WIN_POS_CENTER)
        self.window.set_size_request(600, 400)
        self.window.set_title("OBRevenge Welcome")


# Making Labels
        self.label = gtk.Label("Thank you for trying OBRevenge! Click the buttons below to get started.")
        self.label.set_line_wrap(True)

# Making Image
        self.pix = gtk.gdk.pixbuf_new_from_file_at_size("/usr/share/Icons/obrevenge-redhd.png", 100, 100)
        self.image = gtk.Image()
        self.image.set_from_pixbuf(self.pix)

# Making Buttons
        self.updatebutton = gtk.Button("Update System")
        self.updatebutton.connect("clicked", self.update)
        self.installbutton = gtk.Button("Software Installation Tool")
        self.installbutton.connect("clicked", self.install)
        self.readbutton = gtk.Button("Read Documentation")
        self.readbutton.connect("clicked", self.read)

# Making Containers
        self.vbox = gtk.VBox()
        self.hbox = gtk.HBox()
        self.hbox.pack_start(self.image)
        self.hbox.pack_start(self.label)
        self.vbox1 = gtk.VBox()
        self.vbox1.pack_start(self.updatebutton)
        self.vbox1.pack_start(self.installbutton)
        self.vbox1.pack_start(self.readbutton)

# Placing Items
        self.window.add(self.vbox)
        self.vbox.add(self.hbox)
        self.vbox.add(self.vbox1)


        self.window.show_all()
        self.window.connect("destroy", self.destroy)



    def main(self):
        gtk.main()

# Running Main Window
if __name__== "__main__":
    base = Base()
    base.main()
